type Query {
  youtubesearch(search: String): [YoutubeResult] @function(name: "youtubesearch-${env}")
}

type Mutation {
  sendMail(name: String!, email: String!, message: String!): String! @function(name: "sendmail-${env}")
}

type Track @model @key(name: "ByDate", fields: ["createdAt"], queryField: "tracksByDate"){
  id: ID!
  addedBy: String!
  createdAt: AWSDateTime
  youtubeId: String!
  title: String!,
  thumbnails: youtubeThumbs
  publishedAt: String!
  description: String
  channelTitle: String!
}

type Player @model {
  id: ID!
  startTime: AWSDateTime
  status: PlayerStatus!
  currentTrack: Track @connection
}

enum PlayerStatus {
  PAUSE
  PLAYING
}

type YoutubeResult {
  youtubeId: String!,
  title: String!,
  publishedAt: String!
  description: String
  channelTitle: String!
  thumbnails: youtubeThumbs
}

type youtubeThumbs {
  default: thumbnail
  medium: thumbnail
  high: thumbnail
}

type thumbnail {
  url: String!,
  width: Int!,
  height: Int!,
}