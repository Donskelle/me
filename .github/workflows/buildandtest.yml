name: Run Build and Tests

on:
  push:
    paths-ignore:
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Create Build

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm i
      - run: npm run build
        env:
          CI: true
          ME_GQ_ENDPOINT: ${{ secrets.ME_GQ_ENDPOINT }}
          ME_AWS_APIKEY: ${{ secrets.ME_AWS_APIKEY }}
          G_TOKEN_READ: ${{ secrets.G_TOKEN_READ }}
      - name: Upload build
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: public
          path: public/

  lint-test:
    runs-on: ubuntu-latest
    name: Run Lint

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm i
      - run: npm run lint
      - run: npm t
        env:
          CI: true

  lighthouse:
    needs: build
    runs-on: ubuntu-latest
    name: Run Lighthouse Tests

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm i
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: public
      - name: Lighthouse
        env:
          LHCI_GITHUB_TOKEN: ${{ secrets.G_TOKEN_READ }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm run lhci:ci
          npm run lhci:upload

  cypress:
    needs: build
    runs-on: ubuntu-latest
    name: Run Cypress Tests

    steps:
      - uses: actions/checkout@v1
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: public
      - name: Cypress run
        uses: cypress-io/github-action@v1
        with:
          record: true
          start: npx gatsby serve
          wait-on: 'http://localhost:9000'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

  analyze:
    name: Analyze CodeQL
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['javascript']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: public
  
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
         languages: ${{ matrix.language }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  # smsOnFailure:
  #   needs: [build, lighthouse, cypress]
  #   if: failure() && github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   name: Send SMS on Error in Master Branch
  # steps:
  #   - name: 'Sending SMS Notification'
  #     uses: twilio-labs/actions-sms@v1
  #     with:
  #       fromPhoneNumber: '+12039025279'
  #       toPhoneNumber: '+49(176)32630997'
  #       message: 'There is an error on your website. Goto https://github.com/donskelle/me'
  #     env:
  #       TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
  #       TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
  #       TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
