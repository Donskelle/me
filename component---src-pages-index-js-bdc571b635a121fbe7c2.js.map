{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./src/styles/global.js","webpack:///./src/components/elements.js","webpack:///./src/views/Footer.js","webpack:///./src/views/GithubStars.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Image","gatsby_browser_entry_StaticQuery","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2011440971","GlobalStyle","createGlobalStyle","_templateObject","Content","styled","ParallaxLayer","withConfig","displayName","componentId","padding","@media (min-width: 600px)","@media (min-width: 900px)","justifyContent","alignItems","display","zIndex","Footer","position","width","height","_ref","_ref$offset","offset","speed","Wrapper","div","@media (min-width: 1200px)","GithubStars","github","viewer","name","_2729424005","IndexPage","renderprops_addons","pages","global","seo","title","keywords","views_Footer","style","maxWidth","marginBottom","components_image","views_GithubStars","Date","getFullYear","href","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-bdc571b635a121fbe7c2.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  html {\n    text-rendering: optimizeLegibility;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    -ms-overflow-style: scrollbar;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    background-color: #161719;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    color: #ffffff;\n  }\n  a {\n    text-decoration: none;\n  }\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport tw from 'tailwind.macro'\nimport { ParallaxLayer } from 'react-spring/renderprops-addons'\n\nexport const Content = styled(ParallaxLayer)`\n  ${tw`p-6 md:p-12 lg:p-24 justify-center items-center flex z-50`};\n`\nexport const ContentBG = styled(ParallaxLayer)`\n  ${tw`absolute w-full h-full`};\n`\n","import React from 'react'\n\nimport { Content } from '../components/elements'\n\nconst Footer = ({ children, offset = 0 }) => (\n  <Content speed={0.4} offset={offset}>\n    {children}\n  </Content>\n)\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport tw from 'tailwind.macro'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Content } from '../components/elements'\n\nconst Wrapper = styled.div`\n  ${tw`w-full xl:w-2/3`};\n`\n\nconst GithubStars = ({ offset = 0 }) => (\n  <StaticQuery\n    query={graphql`\n    query {\n      github {\n        viewer {\n          company\n          name\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Content speed={0.4} offset={offset}>\n        <Wrapper>{data.github.viewer.name}</Wrapper>\n      </Content>\n    )}\n  />\n)\nexport default GithubStars\n","import React from 'react'\n// import { Link } from \"gatsby\"\n\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\nimport Image from '../components/image'\nimport SEO from '../components/seo'\nimport GlobalStyle from '../styles/global'\nimport Footer from '../views/Footer'\nimport GithubStars from '../views/GithubStars';\n\n\nconst IndexPage = () => (\n  <Parallax pages={4}>\n    <GlobalStyle />\n    <SEO\n      title=\"Donskelle - Frontend Developer Hamburg\"\n      keywords={[`webdev`, `cv`, `hamburg`, `frontend`]}\n    />\n    <Footer>\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n    </Footer>\n    <GithubStars offset={1}>dasdwqe</GithubStars>\n    <Footer offset={2}>dasdwqe</Footer>\n\n    <ParallaxLayer offset={3}>\n      © {new Date().getFullYear()}, Built with\n      {` `}\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n    </ParallaxLayer>\n  </Parallax>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}