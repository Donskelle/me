{"version":3,"sources":["webpack:///./src/styles/global.js","webpack:///./src/components/elements.js","webpack:///./src/views/Footer.js","webpack:///./src/views/GithubStars.js","webpack:///./src/components/gitimg.js","webpack:///./src/views/Header.js","webpack:///./src/views/Exp.js","webpack:///./src/views/Contact.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","Content","styled","ParallaxLayer","withConfig","displayName","componentId","padding","@media (min-width: 600px)","@media (min-width: 900px)","justifyContent","alignItems","display","zIndex","overflowY","Footer","position","width","height","_ref","children","_ref$offset","offset","react_default","a","createElement","speed","Wrapper","div","@media (min-width: 1200px)","GithubStars","data","_2512531401","github","viewer","starredRepositories","totalCount","nodes","map","star","name","stargazers","href","url","Image","_3966995182","gatsby_image_default","fluid","placeholderImage","childImageSharp","ImgWrapper","borderRadius","boxShadow","overflow","Header","_2980072268","gitimg","Exp","Contact","IndexPage","Fragment","global","seo","title","keywords","renderprops_addons","pages","views_Header","views_Exp","views_Contact","views_Footer","Date","getFullYear","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"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","file":"component---src-pages-index-js-a9e0d583d550f749278d.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  html {\n    text-rendering: optimizeLegibility;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    -ms-overflow-style: scrollbar;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    background-color: #161719;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    color: #ffffff;\n  }\n  a {\n    text-decoration: none;\n  }\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport tw from 'tailwind.macro'\nimport { ParallaxLayer } from 'react-spring/renderprops-addons'\n\nexport const Content = styled(ParallaxLayer)`\n  ${tw`p-6 md:p-12 lg:p-24 justify-center items-center flex z-50 overflow-y-hidden`};\n`\nexport const ContentBG = styled(ParallaxLayer)`\n  ${tw`absolute w-full h-full`};\n`\n","import React from 'react'\n\nimport { Content } from '../components/elements'\n\nconst Footer = ({ children, offset = 0 }) => (\n  <Content speed={0.4} offset={offset}>\n    {children}\n  </Content>\n)\nexport default Footer\n","import React from 'react'\nimport styled from 'styled-components'\nimport tw from 'tailwind.macro'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { Content } from '../components/elements'\n\nconst Wrapper = styled.div`\n  ${tw`w-full xl:w-2/3`};\n`\n\nexport default ({ offset = 0 }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n        viewer {\n          name\n          starredRepositories(\n            last: 20\n            orderBy: { field: STARRED_AT, direction: DESC }\n          ) {\n            totalCount\n            nodes {\n              name\n              url\n              description\n              stargazers {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Content speed={0.4} offset={offset}>\n      <Wrapper>\n        Check out {data.github.viewer.starredRepositories.totalCount} repos i\n        like\n        {data.github.viewer.starredRepositories.nodes.map(star => (\n          <div>\n            {star.name} also liked from {star.stargazers.totalCount}{' '}\n            <a href={star.url}>Link</a>\n          </div>\n        ))}\n      </Wrapper>\n    </Content>\n  )\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gitimg.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 400) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\nexport default Image\n","import React from 'react'\nimport styled from 'styled-components'\nimport tw from 'tailwind.macro'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { Content } from '../components/elements'\nimport Image from '../components/gitimg'\n\nconst ImgWrapper = styled.div`\n  ${tw`rounded-full w-32 xl:w-48 shadow-lg h-auto overflow-hidden`};\n`\n\nconst Header = ({ offset = 0 }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n        viewer {\n          name\n        }\n      }\n    }\n  `)\n  return (\n    <Content speed={1} offset={offset}>\n      {data.github.viewer.name}\n      <ImgWrapper>\n        <Image />\n      </ImgWrapper>\n    </Content>\n  )\n}\nexport default Header\n","import React from 'react'\n// import styled from 'styled-components'\n// import tw from 'tailwind.macro'\n\nimport { Content } from '../components/elements'\n\nconst Exp = ({ offset = 0 }) => (\n  <Content speed={0.5} offset={offset}>\n    <h1>Exp</h1>\n  </Content>\n)\nexport default Exp\n","import React from 'react'\n// import styled from 'styled-components'\n// import tw from 'tailwind.macro'\n\nimport { Content } from '../components/elements'\n\nconst Contact = ({ offset = 0 }) => (\n  <Content speed={0.5} offset={offset}>\n    <h1>Lets get in contact</h1>\n  </Content>\n)\nexport default Contact\n","import React from 'react'\n\nimport { Parallax } from 'react-spring/renderprops-addons'\nimport SEO from '../components/seo'\nimport GlobalStyle from '../styles/global'\nimport Footer from '../views/Footer'\nimport GithubStars from '../views/GithubStars'\nimport Header from '../views/Header'\nimport Exp from '../views/Exp'\nimport Contact from '../views/Contact'\n\nconst IndexPage = () => (\n  <>\n    <GlobalStyle />\n    <SEO\n      title=\"Donskelle - Frontend Developer Hamburg\"\n      keywords={[`javascript`, `cv`, `hamburg`, `frontend`]}\n    />\n\n    <Parallax pages={5}>\n      <Header />\n      <GithubStars offset={1} />\n      <Exp offset={2} />\n      <Contact offset={3} />\n      <Footer offset={4}>\n        © {new Date().getFullYear()}, Built with\n        {`❤`}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        <a href=\"https://github.com/Donskelle/me\">Source</a>\n      </Footer>\n    </Parallax>\n  </>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}